{"version":3,"file":"index.bundle.js","mappings":"mBAEO,MAAMA,EAQXC,YAAYC,GACVC,KAAKC,UAAY,6BACjBD,KAAKD,IAAMA,EACXC,KAAKE,OAAS,KACdF,KAAKG,WAAa,IAClBH,KAAKI,aAGPC,OAAOC,GACFN,KAAKE,SACRF,KAAKO,MAAMC,OAAOC,uBAAwB,EAC1CT,KAAKU,WAAaV,KAAKD,IAAIY,QAAQC,aAAaC,UAAUb,MAC1DA,KAAKc,QAAQR,GAAYS,MAAOC,IAC9BhB,KAAKE,OAASc,EAAK,OAIvBC,UAAUC,GACJlB,KAAKE,QACTF,KAAKD,IAAIoB,UAAUC,aAAapB,KAAKE,OAAQ,CAC3CmB,eAAgBH,EAAKI,SACrBC,WAAY,CACVC,EAAGN,EAAKO,OAAOD,EAAIxB,KAAKG,WACxBuB,EAAGR,EAAKO,OAAOC,EAAI1B,KAAKG,WACxBwB,EAAGT,EAAKO,OAAOE,EAAI3B,KAAKG,cAK9ByB,OAAOC,IAEPC,UACM9B,KAAKE,SACTF,KAAKE,OAAS,KACdF,KAAKU,WAAWqB,SAChBC,YAAW,IAAMhC,KAAKO,MAAMC,OAAOC,uBAAwB,GAAM,MAGrDL,a,qCACZ,MAAM6B,QAAkBjC,KAAKD,IAAImC,MAAMC,aACvCnC,KAAKO,MAAQ0B,EAAUG,aAAa,YACpCH,EAAUI,QACVrC,KAAKO,MAAM+B,WAAWtC,O,+RAGhBc,QAAQR,GAuBd,OAtBIA,IACFA,EAAa,CACXiC,MAAO,UACPC,YAAa,gDACbnB,eAAgB,CACdG,EAAG,EACHE,EAAG,EACHC,EAAG,GAELJ,WAAY,CACVC,EAAG,EACHE,EAAG,GACHC,EAAG,GAELc,MAAO,CACLC,EAAG,EACHC,EAAG,EACHC,EAAG,KAKF5C,KAAKD,IAAIoB,UAAU0B,IAAIvC,IC3E3B,MAAMwC,EAIXhD,YAAYiD,GACV/C,KAAK+C,OAASA,EAGVC,YAAYnB,G,qCAChB,MAAMoB,EAASpB,EAAMqB,OACrBlD,KAAKD,UAAYC,KAAKmD,WAAWF,GACjCjD,KAAKoD,e,+RAGCD,WAAWF,GACjB,MAAMI,EAAeJ,EAAOK,cAC5B,OAAOD,EAAaE,OAAOC,QAAQH,EAAcrD,KAAK+C,QAGhDK,cACN,MAAMK,EAASC,SAASC,cAAc,UACtCF,EAAOG,GAAK,UACZH,EAAOI,UAAY,UACnBH,SAASI,cAAc,cAAcC,YAAYN,GAEjD,MAAMO,EAAS,IAAInE,EAAgBG,KAAKD,KACxC0D,EAAOQ,iBAAiB,SAAS,KAC9BD,EAAO3D,aC5Bd,MAAM6D,EAAM,mCACNC,EAAS,CACb,EAAK,cACL,KAAQ,IACR,GAAM,IACN,GAAM,IACN,eAAkBD,GAGpBR,SAASO,iBAAiB,oBAAoB,KAC5C,MAAMhB,EAASS,SAASU,eAAe,YACjCC,EAAU,IAAIvB,EAAgBoB,GACpCjB,EAAOgB,iBAAiB,OAAQI,GAChC,MAAMC,EAAcC,OAAOC,KAAKL,GAAQM,KAAKP,GAAQA,EAAM,IAAMC,EAAOD,KAAMQ,KAAK,KACnFzB,EAAO0B,IAAM,gCAAgCL,Q","sources":["webpack://tag-placer/./src/handlers/TagStateHandler.ts","webpack://tag-placer/./src/handlers/ShowcaseHandler.ts","webpack://tag-placer/./src/index.ts"],"sourcesContent":["import { Scene, IObserver, Pointer, Mattertag, ISubscription, MpSdk } from \"../../static/bundle/sdk\";\n\nexport class TagStateHandler implements Scene.IComponentEventSpy, IObserver<Pointer.Intersection>{\n  eventType: string;\n  tagSid: string|null;\n  sdk: MpSdk;\n  pointerSub: ISubscription;\n  input: Scene.IComponent;\n  stemScalar: number;\n\n  constructor(sdk: MpSdk){\n    this.eventType = \"INTERACTION.POINTER_BUTTON\";\n    this.sdk = sdk;\n    this.tagSid = null;\n    this.stemScalar = .33;\n    this.setupInput();\n  }\n\n  addTag(tagOptions?: Mattertag.MattertagDescriptor): void{\n    if(this.tagSid) return;\n    this.input.inputs.userNavigationEnabled = false;\n    this.pointerSub = this.sdk.Pointer.intersection.subscribe(this);\n    this._addTag(tagOptions).then( (tags: string[]) => {\n      this.tagSid = tags[0];\n    });\n  }\n\n  onChanged(data: Pointer.Intersection): void {\n    if(!this.tagSid) return;\n    this.sdk.Mattertag.editPosition(this.tagSid, {\n      anchorPosition: data.position,\n      stemVector: {\n        x: data.normal.x * this.stemScalar,\n        y: data.normal.y * this.stemScalar,\n        z: data.normal.z * this.stemScalar,\n      },\n    });\n  }\n\n  notify(event): void {}\n\n  onEvent(): void{\n    if(!this.tagSid) return;\n    this.tagSid = null;\n    this.pointerSub.cancel();\n    setTimeout(() => this.input.inputs.userNavigationEnabled = true, 300); // onEvent fires before the event propagates to the rest of Showcase\n  }\n\n  private async setupInput(){\n    const inputNode = await this.sdk.Scene.createNode();\n    this.input = inputNode.addComponent('mp.input');\n    inputNode.start();\n    this.input.spyOnEvent(this);\n  }\n\n  private _addTag(tagOptions?: Mattertag.MattertagDescriptor): Promise<string[]>{\n    if(!tagOptions){\n      tagOptions = {\n        label: \"New tag\",\n        description: \"This tag was added through the Matterport SDK\",\n        anchorPosition: {\n          x: 0,\n          y: 0,\n          z: 0,\n        },\n        stemVector: { // make the Mattertag stick straight up and make it 0.30 meters (~1 foot) tall\n          x: 0,\n          y: 0.30,\n          z: 0,\n        },\n        color: { // blue disc\n          r: 0.0,\n          g: 0.0,\n          b: 1.0,\n        }\n      } as Mattertag.MattertagDescriptor;\n    }\n\n    return this.sdk.Mattertag.add(tagOptions);\n  }\n\n}","import { MpSdk, ShowcaseBundleWindow } from '../../static/bundle/sdk';\nimport { TagStateHandler } from './TagStateHandler';\n\nexport class ShowcaseHandler{\n  sdkKey: string;\n  sdk: MpSdk;\n\n  constructor(sdkKey: string){\n    this.sdkKey = sdkKey;\n  }\n\n  async handleEvent(event: Event): Promise<void>{\n    const iframe = event.target as HTMLIFrameElement;\n    this.sdk = await this.connectSdk(iframe);\n    this.setupAddTag();\n  }\n\n  private connectSdk(iframe: HTMLIFrameElement): Promise<MpSdk>{\n    const bundleWindow = iframe.contentWindow as ShowcaseBundleWindow;\n    return bundleWindow.MP_SDK.connect(bundleWindow, this.sdkKey);\n  }\n\n  private setupAddTag(){\n    const button = document.createElement('button');\n    button.id = \"add-btn\";\n    button.innerText = \"Add Tag\";\n    document.querySelector('.container').appendChild(button);\n\n    const placer = new TagStateHandler(this.sdk);\n    button.addEventListener(\"click\", () =>{\n       placer.addTag();\n    });\n\n  }\n\n}","import { ShowcaseHandler } from \"./handlers/ShowcaseHandler\";\n\nconst key = \"fe2587b5509f46949a166ee38ec362b6\";\nconst params = {\n  'm': 'j4RZx7ZGM6T',\n  'play': '1',\n  'qs': '1',\n  'hr': '0',\n  'applicationKey': key\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const iframe = document.getElementById('showcase') as HTMLIFrameElement;\n  const handler = new ShowcaseHandler(key);\n  iframe.addEventListener('load', handler);\n  const queryString = Object.keys(params).map((key) => key + '=' + params[key]).join('&');\n  iframe.src = `/static/bundle/showcase.html?${queryString}`;\n});\n"],"names":["TagStateHandler","constructor","sdk","this","eventType","tagSid","stemScalar","setupInput","addTag","tagOptions","input","inputs","userNavigationEnabled","pointerSub","Pointer","intersection","subscribe","_addTag","then","tags","onChanged","data","Mattertag","editPosition","anchorPosition","position","stemVector","x","normal","y","z","notify","event","onEvent","cancel","setTimeout","inputNode","Scene","createNode","addComponent","start","spyOnEvent","label","description","color","r","g","b","add","ShowcaseHandler","sdkKey","handleEvent","iframe","target","connectSdk","setupAddTag","bundleWindow","contentWindow","MP_SDK","connect","button","document","createElement","id","innerText","querySelector","appendChild","placer","addEventListener","key","params","getElementById","handler","queryString","Object","keys","map","join","src"],"sourceRoot":""}